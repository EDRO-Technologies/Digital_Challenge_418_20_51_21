[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["wannasleep <wannasleeprightnowww@gmail.com>"]
readme = "README.md"
packages = [
  { include = "app", from="src" },
  { include = "src" },
]

[tool.poetry.dependencies]
python = "^3.12"


[tool.poetry.group.dev.dependencies]
ruff = "^0.7.4"
pyright = "^1.1.389"
fastapi = "^0.115.5"
pydantic-settings = "^2.6.1"
sqlalchemy = "^2.0.36"
alembic = "^1.14.0"
asyncpg = "^0.30.0"
uvicorn = "^0.32.0"
gunicorn = "^23.0.0"
greenlet = "^3.1.1"
bcrypt = "^4.2.0"
pyjwt = "^2.9.0"
pyotp = "^2.9.0"


[tool.poetry.group.lint.dependencies]
ruff = "^0.7.4"
pyright = "^1.1.389"


[tool.pyright]
extraPaths = ["./src"]

[tool.pyright.analysis]
inlayHints.callArgumentNames = "off"

[tool.pyright.typeEvaluation]
deprecateTypingAliases = true
disableBytesTypePromotions = true
strictDictionaryInference = true
strictListInference = true
strictSetInference = true

[tool.pyright.auto]
formatStrings = true

[tool.ruff]
line-length = 79
extend-exclude = ["src/app/adapters/sqlalchemy_db/migrations/"]

[tool.ruff.lint]
select = [
    "E",  # Ошибки
    "F",  # PEP 8
    "W",  # Предупреждения
    "I",  # Улучшения стиля (Stylistic issues)
    "UP", # Обновления Python
    "N",  # Сложные правила именования
    "BLE", # Bugbear
    "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "C",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "PIE", # flake8-pie
    "PL",  # Pylint
    "Q",  # flake8-quotes
    "RUF", # Ruff-specific rules
    "S",  # flake8-bandit
    "T",  # flake8-print
    "W",  # pycodestyle
    "YTT", # flake8-2020
    "ANN",
]
ignore = ["ANN101", "ISC001"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-type-checking]
quote-annotations = true
strict = true

[tool.ruff.lint.isort]
case-sensitive = true
known-first-party = ["common", "api", "adapters", "dto", "ports", "services",]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
