"""empty message

Revision ID: ae94ffd8bcc4
Revises: 
Create Date: 2024-11-16 21:45:38.138091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ae94ffd8bcc4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('objects_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=42), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_objects_type')),
    sa.UniqueConstraint('id', name=op.f('uq_objects_type_id'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_table('objects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=42), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type'], ['objects_type.id'], name=op.f('fk_objects_type_objects_type'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_objects')),
    sa.UniqueConstraint('id', name=op.f('uq_objects_id'))
    )
    op.create_table('refresh_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('white_ip_list', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_refresh_users_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refresh_users'))
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('refresh_user_id', sa.UUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('expire_time_seconds', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['refresh_user_id'], ['refresh_users.id'], name=op.f('fk_refresh_tokens_refresh_user_id_refresh_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_refresh_tokens'))
    )
    op.create_table('wells',
    sa.Column('well', sa.Integer(), nullable=False),
    sa.Column('ngdu', sa.Integer(), nullable=False),
    sa.Column('cdng', sa.Integer(), nullable=False),
    sa.Column('kust', sa.Integer(), nullable=False),
    sa.Column('mest', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['well'], ['objects.id'], name=op.f('fk_wells_well_objects')),
    sa.PrimaryKeyConstraint('well', name=op.f('pk_wells'))
    )
    op.create_table('well_day_histories',
    sa.Column('well', sa.Integer(), nullable=False),
    sa.Column('date_fact', sa.DATE(), nullable=False),
    sa.Column('debit', sa.FLOAT(), nullable=False),
    sa.Column('ee_consume', sa.FLOAT(), nullable=False),
    sa.Column('expenses', sa.FLOAT(), nullable=False),
    sa.Column('pump_operating', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['well'], ['wells.well'], name=op.f('fk_well_day_histories_well_wells'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('well', 'date_fact', name=op.f('pk_well_day_histories'))
    )
    op.create_table('well_day_plans',
    sa.Column('well', sa.Integer(), nullable=False),
    sa.Column('date_plan', sa.DATE(), nullable=False),
    sa.Column('debit', sa.FLOAT(), nullable=False),
    sa.Column('ee_consume', sa.FLOAT(), nullable=False),
    sa.Column('expenses', sa.FLOAT(), nullable=False),
    sa.Column('pump_operating', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['well'], ['wells.well'], name=op.f('fk_well_day_plans_well_wells'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('well', 'date_plan', name=op.f('pk_well_day_plans'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('well_day_plans')
    op.drop_table('well_day_histories')
    op.drop_table('wells')
    op.drop_table('refresh_tokens')
    op.drop_table('refresh_users')
    op.drop_table('objects')
    op.drop_table('users')
    op.drop_table('objects_type')
    # ### end Alembic commands ###
